

create table Usuario
( 
  idUsuario varchar(50) not null,
  tipoUsuario varchar(10) not null,
  password varchar(50) not null,
  fechaModificacion date,
  fechaCreacion date,
  creadoPor varchar(100),
  modificadoPor varchar(100),
  activo varchar(3),
  constraint PK_Usuario primary key (idUsuario)
);


INSERT INTO usuario(idUsuario, tipoUsuario, password, fechaModificacion, fechaCreacion, creadoPor, modificadoPor,activo)
VALUES('admin', 'Supervisor', 'admin', 'sysdate',' sysdate', 'Supervisor', 'Supervisor', 'Sí');

INSERT INTO usuario(idUsuario, tipoUsuario, password, fechaModificacion, fechaCreacion, creadoPor, modificadoPor,activo) 
VALUES('Ericka','Supervisor','oracle',sysdate,sysdate,'Supervisor','Supervisor','Sí');

INSERT INTO usuario(idUsuario, tipoUsuario, password, fechaModificacion, fechaCreacion, creadoPor, modificadoPor,activo) 
VALUES('Jona','Supervisor','oracle',sysdate,sysdate,'Supervisor','Supervisor','Sí');

INSERT INTO usuario(idUsuario, tipoUsuario, password, fechaModificacion, fechaCreacion, creadoPor, modificadoPor,activo) 
VALUES('Bryan','Supervisor','oracle',sysdate,sysdate,'Supervisor','Supervisor','Sí');


create table Deducciones
(
  idDeducciones varchar(50) not null, 
  porcentaje numeric(38,2) not null,
  descripcion varchar(500) not null,
  fechaModificacion date,
  fechaCreacion date,
  creadoPor varchar(100),
  modificadoPor varchar(100),
  activo varchar(3),
  constraint PK_Deducciones primary key (idDeducciones)
);

create table CatalogoFechas
(
  idCatalogoFechas varchar(50) not null,
  dia numeric not null,
  mes varchar(50) not null,
  descripcion varchar(500),
  fechaModificacion date,
  fechaCreacion date,
  creadoPor varchar(100),
  modificadoPor varchar(100),
  activo varchar(3),
  constraint PK_CatalogoFechas primary key (idCatalogoFechas)
);

create table Parametro
( 
  idParametro varchar(50) not null,
  horaEntrada date not null,
  horaSalida date not null,
  lunes varchar(3),
  martes varchar(3),
  miercoles varchar(3),
  jueves varchar(3),
  viernes varchar(3),
  sabado varchar(3),
  domingo varchar(3),
  fechaModificacion date,
  fechaCreacion date,
  creadoPor varchar(100),
  modificadoPor varchar(100),
  activo varchar(3),
  constraint PK_Parametro primary key (idParametro)
);

create table Departamento
(
  idDepartamento varchar(50) not null,
  nombreDepartamento varchar(50) not null,
  fechaModificacion date,
  fechaCreacion date,
  creadoPor varchar(100),
  modificadoPor varchar(100),
  activo varchar(3),
  constraint PK_Departamento primary key (idDepartamento)
);

create table Empleado
(
       idEmpleado varchar(50),
       idDepartamento varchar(50),
       nombreEmpleado varchar(50),
       apellido1 varchar(50),
       apellido2 varchar(50),
       numCedula number,
       telefono number,
       fechaNacimiento varchar(50),
       salarioPorHora numeric(9,2),
       creadoPor varchar(100),
       fechaCreacion date,
       modificadoPor varchar(100),
       fechaModificacion date,
       activo varchar(3),
       constraint PK_Empleado primary key (idEmpleado),
       constraint Empleado_FK foreign key (idDepartamento)references Departamento(idDepartamento)
);

create table marca
(
       idMarca number,
       idEmpleado varchar(50),
       idUnificacion number,
       estadoMarca varchar(50),       
       tipoMarca varchar(50),
       fechaMarca date,	       
       creadoPor varchar(100),
       fechaCreacion date,
       modificadoPor varchar(100),
       fechaModificacion date,
       activo varchar(3),
       constraint PK_Marca primary key (idMarca),
       constraint Marca_FK foreign key (idEmpleado)references Empleado(idEmpleado)
);


CREATE SEQUENCE seq_marca MINVALUE 0 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1
CACHE 20 NOORDER  NOCYCLE;

create or replace trigger trg_marca
BEFORE INSERT ON marca FOR EACH ROW
BEGIN
   SELECT seq_marca.NEXTVAL
   INTO :NEW.idMarca
   FROM DUAL;
END;



create table Unificacion
(
      idUnificacion number not null,
      idEmpleado varchar (50) not null,
      idPago number(15,2) not null,      
      estadoUnificacion varchar(50),
      fechaUnificacion date,
      horaRegular number(9,2),
      horaExtra number(9,2),
      horaDoble number(9,2),
      aprobacionExtra varchar(50),
      notasAprobacion varchar(100),
      pagoRegular number(15,2),
      pagoExtra number(15,2),
      pagoDoble number(15,2),
      porcentajeDeduccion number(15,2), 
      montoDeduccion number(15,2),    
      salarioBruto number(9,2),
      montoUnificacion number(9,2),          
      creadoPor varchar(100),
      fechaCreacion date,
      modificadoPor varchar(100),
      fechaModificacion date,
      activo varchar(3),
      constraint Pk_Unificacion primary key (idUnificacion),
      constraint Unificacion_FK1 foreign key (idEmpleado) references Empleado (idEmpleado)      
);

CREATE SEQUENCE seq_Unificacion MINVALUE 0 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1
CACHE 20 NOORDER  NOCYCLE;

create or replace trigger trg_Unificacion
BEFORE INSERT ON unificacion FOR EACH ROW
BEGIN
   SELECT seq_Unificacion.NEXTVAL
   INTO :NEW.idUnificacion
   FROM DUAL;
END;

create table Pago
(
     idPago numeric not null,
     fechaPago1 date not null,
     fechaPago2 date not null,
     totalPago numeric not null,
     totalDeducciones numeric (15,2)not null,
     anulado varchar(2) not null,
     descripcion varchar(200),
     creadoPor varchar (30) not null,
     fechaCreacion timestamp not null,
     modificadoPor varchar (30) not null,
     fechaModificacion timestamp not null,
     constraint Pk_Pago primary key (idPago)
);

CREATE SEQUENCE seq_Pago MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2 
CACHE 20 NOORDER  NOCYCLE;

create or replace trigger trg_Pago
BEFORE INSERT ON Pago FOR EACH ROW
BEGIN
   SELECT seq_Pago.NEXTVAL
   INTO :NEW.idPago 
   FROM DUAL;
END;  
